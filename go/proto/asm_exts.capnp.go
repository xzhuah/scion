// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	math "math"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type RoutingPolicyExt struct{ capnp.Struct }

// RoutingPolicyExt_TypeID is the unique identifier for the type RoutingPolicyExt.
const RoutingPolicyExt_TypeID = 0x96c1dab83835e4f9

func NewRoutingPolicyExt(s *capnp.Segment) (RoutingPolicyExt, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return RoutingPolicyExt{st}, err
}

func NewRootRoutingPolicyExt(s *capnp.Segment) (RoutingPolicyExt, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return RoutingPolicyExt{st}, err
}

func ReadRootRoutingPolicyExt(msg *capnp.Message) (RoutingPolicyExt, error) {
	root, err := msg.RootPtr()
	return RoutingPolicyExt{root.Struct()}, err
}

func (s RoutingPolicyExt) String() string {
	str, _ := text.Marshal(0x96c1dab83835e4f9, s.Struct)
	return str
}

func (s RoutingPolicyExt) Set() bool {
	return s.Struct.Bit(0)
}

func (s RoutingPolicyExt) SetSet(v bool) {
	s.Struct.SetBit(0, v)
}

func (s RoutingPolicyExt) PolType() uint8 {
	return s.Struct.Uint8(1)
}

func (s RoutingPolicyExt) SetPolType(v uint8) {
	s.Struct.SetUint8(1, v)
}

func (s RoutingPolicyExt) IfID() uint64 {
	return s.Struct.Uint64(8)
}

func (s RoutingPolicyExt) SetIfID(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s RoutingPolicyExt) Isdases() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s RoutingPolicyExt) HasIsdases() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RoutingPolicyExt) SetIsdases(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewIsdases sets the isdases field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s RoutingPolicyExt) NewIsdases(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// RoutingPolicyExt_List is a list of RoutingPolicyExt.
type RoutingPolicyExt_List struct{ capnp.List }

// NewRoutingPolicyExt creates a new list of RoutingPolicyExt.
func NewRoutingPolicyExt_List(s *capnp.Segment, sz int32) (RoutingPolicyExt_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return RoutingPolicyExt_List{l}, err
}

func (s RoutingPolicyExt_List) At(i int) RoutingPolicyExt { return RoutingPolicyExt{s.List.Struct(i)} }

func (s RoutingPolicyExt_List) Set(i int, v RoutingPolicyExt) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RoutingPolicyExt_List) String() string {
	str, _ := text.MarshalList(0x96c1dab83835e4f9, s.List)
	return str
}

// RoutingPolicyExt_Promise is a wrapper for a RoutingPolicyExt promised by a client call.
type RoutingPolicyExt_Promise struct{ *capnp.Pipeline }

func (p RoutingPolicyExt_Promise) Struct() (RoutingPolicyExt, error) {
	s, err := p.Pipeline.Struct()
	return RoutingPolicyExt{s}, err
}

type ISDAnnouncementExt struct{ capnp.Struct }

// ISDAnnouncementExt_TypeID is the unique identifier for the type ISDAnnouncementExt.
const ISDAnnouncementExt_TypeID = 0xc586650e812cc6a1

func NewISDAnnouncementExt(s *capnp.Segment) (ISDAnnouncementExt, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return ISDAnnouncementExt{st}, err
}

func NewRootISDAnnouncementExt(s *capnp.Segment) (ISDAnnouncementExt, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return ISDAnnouncementExt{st}, err
}

func ReadRootISDAnnouncementExt(msg *capnp.Message) (ISDAnnouncementExt, error) {
	root, err := msg.RootPtr()
	return ISDAnnouncementExt{root.Struct()}, err
}

func (s ISDAnnouncementExt) String() string {
	str, _ := text.Marshal(0xc586650e812cc6a1, s.Struct)
	return str
}

func (s ISDAnnouncementExt) Set() bool {
	return s.Struct.Bit(0)
}

func (s ISDAnnouncementExt) SetSet(v bool) {
	s.Struct.SetBit(0, v)
}

// ISDAnnouncementExt_List is a list of ISDAnnouncementExt.
type ISDAnnouncementExt_List struct{ capnp.List }

// NewISDAnnouncementExt creates a new list of ISDAnnouncementExt.
func NewISDAnnouncementExt_List(s *capnp.Segment, sz int32) (ISDAnnouncementExt_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return ISDAnnouncementExt_List{l}, err
}

func (s ISDAnnouncementExt_List) At(i int) ISDAnnouncementExt {
	return ISDAnnouncementExt{s.List.Struct(i)}
}

func (s ISDAnnouncementExt_List) Set(i int, v ISDAnnouncementExt) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ISDAnnouncementExt_List) String() string {
	str, _ := text.MarshalList(0xc586650e812cc6a1, s.List)
	return str
}

// ISDAnnouncementExt_Promise is a wrapper for a ISDAnnouncementExt promised by a client call.
type ISDAnnouncementExt_Promise struct{ *capnp.Pipeline }

func (p ISDAnnouncementExt_Promise) Struct() (ISDAnnouncementExt, error) {
	s, err := p.Pipeline.Struct()
	return ISDAnnouncementExt{s}, err
}

type BwCluster struct{ capnp.Struct }

// BwCluster_TypeID is the unique identifier for the type BwCluster.
const BwCluster_TypeID = 0x8947113f23a9ab50

func NewBwCluster(s *capnp.Segment) (BwCluster, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BwCluster{st}, err
}

func NewRootBwCluster(s *capnp.Segment) (BwCluster, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BwCluster{st}, err
}

func ReadRootBwCluster(msg *capnp.Message) (BwCluster, error) {
	root, err := msg.RootPtr()
	return BwCluster{root.Struct()}, err
}

func (s BwCluster) String() string {
	str, _ := text.Marshal(0x8947113f23a9ab50, s.Struct)
	return str
}

func (s BwCluster) ClusterBW() uint32 {
	return s.Struct.Uint32(0)
}

func (s BwCluster) SetClusterBW(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s BwCluster) Interfaces() (capnp.UInt16List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt16List{List: p.List()}, err
}

func (s BwCluster) HasInterfaces() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s BwCluster) SetInterfaces(v capnp.UInt16List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewInterfaces sets the interfaces field to a newly
// allocated capnp.UInt16List, preferring placement in s's segment.
func (s BwCluster) NewInterfaces(n int32) (capnp.UInt16List, error) {
	l, err := capnp.NewUInt16List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt16List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// BwCluster_List is a list of BwCluster.
type BwCluster_List struct{ capnp.List }

// NewBwCluster creates a new list of BwCluster.
func NewBwCluster_List(s *capnp.Segment, sz int32) (BwCluster_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return BwCluster_List{l}, err
}

func (s BwCluster_List) At(i int) BwCluster { return BwCluster{s.List.Struct(i)} }

func (s BwCluster_List) Set(i int, v BwCluster) error { return s.List.SetStruct(i, v.Struct) }

func (s BwCluster_List) String() string {
	str, _ := text.MarshalList(0x8947113f23a9ab50, s.List)
	return str
}

// BwCluster_Promise is a wrapper for a BwCluster promised by a client call.
type BwCluster_Promise struct{ *capnp.Pipeline }

func (p BwCluster_Promise) Struct() (BwCluster, error) {
	s, err := p.Pipeline.Struct()
	return BwCluster{s}, err
}

type BwInfo struct{ capnp.Struct }

// BwInfo_TypeID is the unique identifier for the type BwInfo.
const BwInfo_TypeID = 0xe8339f855b7b98a8

func NewBwInfo(s *capnp.Segment) (BwInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BwInfo{st}, err
}

func NewRootBwInfo(s *capnp.Segment) (BwInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BwInfo{st}, err
}

func ReadRootBwInfo(msg *capnp.Message) (BwInfo, error) {
	root, err := msg.RootPtr()
	return BwInfo{root.Struct()}, err
}

func (s BwInfo) String() string {
	str, _ := text.Marshal(0xe8339f855b7b98a8, s.Struct)
	return str
}

func (s BwInfo) BwClusters() (BwCluster_List, error) {
	p, err := s.Struct.Ptr(0)
	return BwCluster_List{List: p.List()}, err
}

func (s BwInfo) HasBwClusters() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s BwInfo) SetBwClusters(v BwCluster_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewBwClusters sets the bwClusters field to a newly
// allocated BwCluster_List, preferring placement in s's segment.
func (s BwInfo) NewBwClusters(n int32) (BwCluster_List, error) {
	l, err := NewBwCluster_List(s.Struct.Segment(), n)
	if err != nil {
		return BwCluster_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s BwInfo) EgressBW() uint32 {
	return s.Struct.Uint32(0)
}

func (s BwInfo) SetEgressBW(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s BwInfo) InToOutBW() uint32 {
	return s.Struct.Uint32(4)
}

func (s BwInfo) SetInToOutBW(v uint32) {
	s.Struct.SetUint32(4, v)
}

// BwInfo_List is a list of BwInfo.
type BwInfo_List struct{ capnp.List }

// NewBwInfo creates a new list of BwInfo.
func NewBwInfo_List(s *capnp.Segment, sz int32) (BwInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return BwInfo_List{l}, err
}

func (s BwInfo_List) At(i int) BwInfo { return BwInfo{s.List.Struct(i)} }

func (s BwInfo_List) Set(i int, v BwInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s BwInfo_List) String() string {
	str, _ := text.MarshalList(0xe8339f855b7b98a8, s.List)
	return str
}

// BwInfo_Promise is a wrapper for a BwInfo promised by a client call.
type BwInfo_Promise struct{ *capnp.Pipeline }

func (p BwInfo_Promise) Struct() (BwInfo, error) {
	s, err := p.Pipeline.Struct()
	return BwInfo{s}, err
}

type GeoInfo struct{ capnp.Struct }

// GeoInfo_TypeID is the unique identifier for the type GeoInfo.
const GeoInfo_TypeID = 0xa7ddfd22d6604c1a

func NewGeoInfo(s *capnp.Segment) (GeoInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return GeoInfo{st}, err
}

func NewRootGeoInfo(s *capnp.Segment) (GeoInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return GeoInfo{st}, err
}

func ReadRootGeoInfo(msg *capnp.Message) (GeoInfo, error) {
	root, err := msg.RootPtr()
	return GeoInfo{root.Struct()}, err
}

func (s GeoInfo) String() string {
	str, _ := text.Marshal(0xa7ddfd22d6604c1a, s.Struct)
	return str
}

func (s GeoInfo) Latitude() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s GeoInfo) SetLatitude(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s GeoInfo) Longitude() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s GeoInfo) SetLongitude(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s GeoInfo) RawIA() uint64 {
	return s.Struct.Uint64(16)
}

func (s GeoInfo) SetRawIA(v uint64) {
	s.Struct.SetUint64(16, v)
}

// GeoInfo_List is a list of GeoInfo.
type GeoInfo_List struct{ capnp.List }

// NewGeoInfo creates a new list of GeoInfo.
func NewGeoInfo_List(s *capnp.Segment, sz int32) (GeoInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0}, sz)
	return GeoInfo_List{l}, err
}

func (s GeoInfo_List) At(i int) GeoInfo { return GeoInfo{s.List.Struct(i)} }

func (s GeoInfo_List) Set(i int, v GeoInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s GeoInfo_List) String() string {
	str, _ := text.MarshalList(0xa7ddfd22d6604c1a, s.List)
	return str
}

// GeoInfo_Promise is a wrapper for a GeoInfo promised by a client call.
type GeoInfo_Promise struct{ *capnp.Pipeline }

func (p GeoInfo_Promise) Struct() (GeoInfo, error) {
	s, err := p.Pipeline.Struct()
	return GeoInfo{s}, err
}

type WatchDogMetricExt struct{ capnp.Struct }

// WatchDogMetricExt_TypeID is the unique identifier for the type WatchDogMetricExt.
const WatchDogMetricExt_TypeID = 0xec40e340d3b20459

func NewWatchDogMetricExt(s *capnp.Segment) (WatchDogMetricExt, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return WatchDogMetricExt{st}, err
}

func NewRootWatchDogMetricExt(s *capnp.Segment) (WatchDogMetricExt, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return WatchDogMetricExt{st}, err
}

func ReadRootWatchDogMetricExt(msg *capnp.Message) (WatchDogMetricExt, error) {
	root, err := msg.RootPtr()
	return WatchDogMetricExt{root.Struct()}, err
}

func (s WatchDogMetricExt) String() string {
	str, _ := text.Marshal(0xec40e340d3b20459, s.Struct)
	return str
}

func (s WatchDogMetricExt) Set() bool {
	return s.Struct.Bit(0)
}

func (s WatchDogMetricExt) SetSet(v bool) {
	s.Struct.SetBit(0, v)
}

func (s WatchDogMetricExt) BwInfo() (BwInfo, error) {
	p, err := s.Struct.Ptr(0)
	return BwInfo{Struct: p.Struct()}, err
}

func (s WatchDogMetricExt) HasBwInfo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s WatchDogMetricExt) SetBwInfo(v BwInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewBwInfo sets the bwInfo field to a newly
// allocated BwInfo struct, preferring placement in s's segment.
func (s WatchDogMetricExt) NewBwInfo() (BwInfo, error) {
	ss, err := NewBwInfo(s.Struct.Segment())
	if err != nil {
		return BwInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s WatchDogMetricExt) GeoInfo() (GeoInfo, error) {
	p, err := s.Struct.Ptr(1)
	return GeoInfo{Struct: p.Struct()}, err
}

func (s WatchDogMetricExt) HasGeoInfo() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s WatchDogMetricExt) SetGeoInfo(v GeoInfo) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewGeoInfo sets the geoInfo field to a newly
// allocated GeoInfo struct, preferring placement in s's segment.
func (s WatchDogMetricExt) NewGeoInfo() (GeoInfo, error) {
	ss, err := NewGeoInfo(s.Struct.Segment())
	if err != nil {
		return GeoInfo{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// WatchDogMetricExt_List is a list of WatchDogMetricExt.
type WatchDogMetricExt_List struct{ capnp.List }

// NewWatchDogMetricExt creates a new list of WatchDogMetricExt.
func NewWatchDogMetricExt_List(s *capnp.Segment, sz int32) (WatchDogMetricExt_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return WatchDogMetricExt_List{l}, err
}

func (s WatchDogMetricExt_List) At(i int) WatchDogMetricExt {
	return WatchDogMetricExt{s.List.Struct(i)}
}

func (s WatchDogMetricExt_List) Set(i int, v WatchDogMetricExt) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s WatchDogMetricExt_List) String() string {
	str, _ := text.MarshalList(0xec40e340d3b20459, s.List)
	return str
}

// WatchDogMetricExt_Promise is a wrapper for a WatchDogMetricExt promised by a client call.
type WatchDogMetricExt_Promise struct{ *capnp.Pipeline }

func (p WatchDogMetricExt_Promise) Struct() (WatchDogMetricExt, error) {
	s, err := p.Pipeline.Struct()
	return WatchDogMetricExt{s}, err
}

func (p WatchDogMetricExt_Promise) BwInfo() BwInfo_Promise {
	return BwInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p WatchDogMetricExt_Promise) GeoInfo() GeoInfo_Promise {
	return GeoInfo_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

const schema_e6c88f91b6a1209e = "x\xdal\x94OL\x13]\x14\xc5\xefy\xaf@\xfb\xf1" +
	"\x01\x1d\xa7\x89\xc6\x0d\x067b\xd4\x80\xd5\xc4\xb0i\xa9" +
	"%X\x02\xb1\x0f1\x08Bd\x18\x1ee\x92v\xa6\xe9" +
	"LS\x88\x0bb\xa2&\xae\x8c\x1b\xe3J\xc3J\x8d\x0b" +
	"\x13\x16\xc6\xb8s\xa11nM\\\x98\xb80\x1au\xa1" +
	"\x0b\x96,\xc8\x98\xd7\x7f\x03\x85U_n\xcf\xcc\xfd\xdd" +
	"s\xcf\x9b\x81\x02\x92l\xb0\xed0#\x12G\xda\xda\xfd" +
	"\xec\x8b\xe7\xc7\x13\xda\xe8=\x12=\x80\xff\xf8\xd8\xc6\xab" +
	"\x07\xf7?\xfc\xa46t\x10i[\x1f\xb5\x1d\xf5\xbb]" +
	"!\xf8\xdb?\xce_x\xfd\xe5\xedC\xa5d-\xcax" +
	"\x01\x0c\xfa\x9a:\xeae\xfc\"\xf8G\xc7\x17>\xf7\xed" +
	"|}\xaa\xd4<P\x87\x94b\x86\xbd\xd1\x0d\xa6N\xf3" +
	"\xec%\xc1\xdfx\x7f\xeaV\xb7\xbc\xfb\xae\x85Ai\xe3" +
	";\xec\x10\xf4.\xae\xc4\x11\x9e \xf8\xcf\x1e\xdd\xbc~" +
	"\xe7I\xfc\xf7A\xc0z?\xdf\xd4\x07\xab\xe2\xd3\\\xbd" +
	"y&\xb4\xf9)\xf9=\xf9\xa7U\xac\x9a\xc7\xbf\xf1\xff" +
	"\xa0oU\xd5\x7f\xabj\xc3-\xdc\x90\xab\x9e\xcb\xce\x98" +
	"F\xd1.\x0e\xa5*\x17\xf3e\xd7\x93%\xa2, \xc2" +
	"<D\x14\x02\x91\xd6?I$Np\x88s\x0c@\x0c" +
	"\xaa68K$\x068\xc48\x83o\xd6\x9eK\x11\xa6" +
	"\x11&\x860\xc1\xb7lO\x96\x96\x0d\x93\xb8t\xd1M" +
	"\xc8r\xa0\x83\x98:6;\xf3z\xe7I\xa7\xecYv" +
	".\xeb\xe4-smd\xd5\xab\xf6\x8f6\xfb\x1b}D" +
	"b\x8eC\xac0h\x0d\x00\x99\"\x12\x0b\x1c\"\xcf\xa0" +
	"1\xc4\xc0\x884\xeb$\x91X\xe2\x10E\x06\xf0\x188" +
	"\x91VP\xc2\x15\x0eq\x9b\xa1\xc3\x95\x1e@\x0c \xac" +
	"\x17\x9d\xfc\xd4ZQ\xa2\x9d\x18\xda\x09=\xd6r&\x8d" +
	"\x081D\x08\xeb\x96\xbbd\xb8\x01y\xa4\x85\x1cu\xf2" +
	"\xd1\x84t2\xf6\xb2\xa3\x80\xffo\x02\x8f\x8c\x11\x894" +
	"\x87\xc8\xee\x02\x9eP.\x8es\x88k\x0a\x98\xd5\x80\xaf" +
	"\x9e%\x12Y\x0e1\xc7\xe0\xe7\x0d\xcf\xf2\xcaK\x92\x88" +
	"\xd0I\x0c\x9d\x04?\xef\xd89U$\xc8F\xad\xb7d" +
	"T2\xc3\x0d\xd2}ff\xae\xa4\x87m\xdb)\xdb\xa6" +
	",H\xdb\x1bY\x85\xa7\xe8BM\xba.eg\x98C" +
	"\xc4\xf6\x1a\xb2o\xb8To\xe5\x80\xd9f\xeb\xb3-\x04" +
	"a\x98\x1f\xdb\xb5\xa0\xc6.\xe4d\xb0\x0b\x7f\xb1\x9e-" +
	"\xe2\xa5\xa6\xa7\xd1\xe06\x12\xaa\xee\xca\\I\xbanj" +
	"Z\x19\x10\xe4h\xca\xb9\\\xf6\xf6d\xabu\xe4i\xc3" +
	"3W\xd2NnBz%\xcbT\x01\xa2\x16h5r" +
	"\xb2\x96\xd6\x06tfh\xd7\x92\x1a\xd0\x13*,\x978" +
	"\xc4\xd4^o\x12\x8bU+\x10\x0d.$\x01Q\xc2z" +
	"\xae\x16\x00D\x83o@\xed\x9f\x7f\x01\x00\x00\xff\xff^" +
	",\x08W"

func init() {
	schemas.Register(schema_e6c88f91b6a1209e,
		0x8947113f23a9ab50,
		0x96c1dab83835e4f9,
		0xa7ddfd22d6604c1a,
		0xc586650e812cc6a1,
		0xe8339f855b7b98a8,
		0xec40e340d3b20459)
}
