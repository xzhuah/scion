// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	math "math"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type RoutingPolicyExt struct{ capnp.Struct }

// RoutingPolicyExt_TypeID is the unique identifier for the type RoutingPolicyExt.
const RoutingPolicyExt_TypeID = 0x96c1dab83835e4f9

func NewRoutingPolicyExt(s *capnp.Segment) (RoutingPolicyExt, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return RoutingPolicyExt{st}, err
}

func NewRootRoutingPolicyExt(s *capnp.Segment) (RoutingPolicyExt, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return RoutingPolicyExt{st}, err
}

func ReadRootRoutingPolicyExt(msg *capnp.Message) (RoutingPolicyExt, error) {
	root, err := msg.RootPtr()
	return RoutingPolicyExt{root.Struct()}, err
}

func (s RoutingPolicyExt) String() string {
	str, _ := text.Marshal(0x96c1dab83835e4f9, s.Struct)
	return str
}

func (s RoutingPolicyExt) Set() bool {
	return s.Struct.Bit(0)
}

func (s RoutingPolicyExt) SetSet(v bool) {
	s.Struct.SetBit(0, v)
}

func (s RoutingPolicyExt) PolType() uint8 {
	return s.Struct.Uint8(1)
}

func (s RoutingPolicyExt) SetPolType(v uint8) {
	s.Struct.SetUint8(1, v)
}

func (s RoutingPolicyExt) IfID() uint64 {
	return s.Struct.Uint64(8)
}

func (s RoutingPolicyExt) SetIfID(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s RoutingPolicyExt) Isdases() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s RoutingPolicyExt) HasIsdases() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RoutingPolicyExt) SetIsdases(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewIsdases sets the isdases field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s RoutingPolicyExt) NewIsdases(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// RoutingPolicyExt_List is a list of RoutingPolicyExt.
type RoutingPolicyExt_List struct{ capnp.List }

// NewRoutingPolicyExt creates a new list of RoutingPolicyExt.
func NewRoutingPolicyExt_List(s *capnp.Segment, sz int32) (RoutingPolicyExt_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return RoutingPolicyExt_List{l}, err
}

func (s RoutingPolicyExt_List) At(i int) RoutingPolicyExt { return RoutingPolicyExt{s.List.Struct(i)} }

func (s RoutingPolicyExt_List) Set(i int, v RoutingPolicyExt) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RoutingPolicyExt_List) String() string {
	str, _ := text.MarshalList(0x96c1dab83835e4f9, s.List)
	return str
}

// RoutingPolicyExt_Promise is a wrapper for a RoutingPolicyExt promised by a client call.
type RoutingPolicyExt_Promise struct{ *capnp.Pipeline }

func (p RoutingPolicyExt_Promise) Struct() (RoutingPolicyExt, error) {
	s, err := p.Pipeline.Struct()
	return RoutingPolicyExt{s}, err
}

type ISDAnnouncementExt struct{ capnp.Struct }

// ISDAnnouncementExt_TypeID is the unique identifier for the type ISDAnnouncementExt.
const ISDAnnouncementExt_TypeID = 0xc586650e812cc6a1

func NewISDAnnouncementExt(s *capnp.Segment) (ISDAnnouncementExt, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return ISDAnnouncementExt{st}, err
}

func NewRootISDAnnouncementExt(s *capnp.Segment) (ISDAnnouncementExt, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return ISDAnnouncementExt{st}, err
}

func ReadRootISDAnnouncementExt(msg *capnp.Message) (ISDAnnouncementExt, error) {
	root, err := msg.RootPtr()
	return ISDAnnouncementExt{root.Struct()}, err
}

func (s ISDAnnouncementExt) String() string {
	str, _ := text.Marshal(0xc586650e812cc6a1, s.Struct)
	return str
}

func (s ISDAnnouncementExt) Set() bool {
	return s.Struct.Bit(0)
}

func (s ISDAnnouncementExt) SetSet(v bool) {
	s.Struct.SetBit(0, v)
}

// ISDAnnouncementExt_List is a list of ISDAnnouncementExt.
type ISDAnnouncementExt_List struct{ capnp.List }

// NewISDAnnouncementExt creates a new list of ISDAnnouncementExt.
func NewISDAnnouncementExt_List(s *capnp.Segment, sz int32) (ISDAnnouncementExt_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return ISDAnnouncementExt_List{l}, err
}

func (s ISDAnnouncementExt_List) At(i int) ISDAnnouncementExt {
	return ISDAnnouncementExt{s.List.Struct(i)}
}

func (s ISDAnnouncementExt_List) Set(i int, v ISDAnnouncementExt) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ISDAnnouncementExt_List) String() string {
	str, _ := text.MarshalList(0xc586650e812cc6a1, s.List)
	return str
}

// ISDAnnouncementExt_Promise is a wrapper for a ISDAnnouncementExt promised by a client call.
type ISDAnnouncementExt_Promise struct{ *capnp.Pipeline }

func (p ISDAnnouncementExt_Promise) Struct() (ISDAnnouncementExt, error) {
	s, err := p.Pipeline.Struct()
	return ISDAnnouncementExt{s}, err
}

type BwCluster struct{ capnp.Struct }

// BwCluster_TypeID is the unique identifier for the type BwCluster.
const BwCluster_TypeID = 0x8947113f23a9ab50

func NewBwCluster(s *capnp.Segment) (BwCluster, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BwCluster{st}, err
}

func NewRootBwCluster(s *capnp.Segment) (BwCluster, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BwCluster{st}, err
}

func ReadRootBwCluster(msg *capnp.Message) (BwCluster, error) {
	root, err := msg.RootPtr()
	return BwCluster{root.Struct()}, err
}

func (s BwCluster) String() string {
	str, _ := text.Marshal(0x8947113f23a9ab50, s.Struct)
	return str
}

func (s BwCluster) ClusterBW() uint32 {
	return s.Struct.Uint32(0)
}

func (s BwCluster) SetClusterBW(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s BwCluster) Interfaces() (capnp.UInt16List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt16List{List: p.List()}, err
}

func (s BwCluster) HasInterfaces() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s BwCluster) SetInterfaces(v capnp.UInt16List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewInterfaces sets the interfaces field to a newly
// allocated capnp.UInt16List, preferring placement in s's segment.
func (s BwCluster) NewInterfaces(n int32) (capnp.UInt16List, error) {
	l, err := capnp.NewUInt16List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt16List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// BwCluster_List is a list of BwCluster.
type BwCluster_List struct{ capnp.List }

// NewBwCluster creates a new list of BwCluster.
func NewBwCluster_List(s *capnp.Segment, sz int32) (BwCluster_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return BwCluster_List{l}, err
}

func (s BwCluster_List) At(i int) BwCluster { return BwCluster{s.List.Struct(i)} }

func (s BwCluster_List) Set(i int, v BwCluster) error { return s.List.SetStruct(i, v.Struct) }

func (s BwCluster_List) String() string {
	str, _ := text.MarshalList(0x8947113f23a9ab50, s.List)
	return str
}

// BwCluster_Promise is a wrapper for a BwCluster promised by a client call.
type BwCluster_Promise struct{ *capnp.Pipeline }

func (p BwCluster_Promise) Struct() (BwCluster, error) {
	s, err := p.Pipeline.Struct()
	return BwCluster{s}, err
}

type BwInfo struct{ capnp.Struct }

// BwInfo_TypeID is the unique identifier for the type BwInfo.
const BwInfo_TypeID = 0xe8339f855b7b98a8

func NewBwInfo(s *capnp.Segment) (BwInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BwInfo{st}, err
}

func NewRootBwInfo(s *capnp.Segment) (BwInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BwInfo{st}, err
}

func ReadRootBwInfo(msg *capnp.Message) (BwInfo, error) {
	root, err := msg.RootPtr()
	return BwInfo{root.Struct()}, err
}

func (s BwInfo) String() string {
	str, _ := text.Marshal(0xe8339f855b7b98a8, s.Struct)
	return str
}

func (s BwInfo) BwClusters() (BwCluster_List, error) {
	p, err := s.Struct.Ptr(0)
	return BwCluster_List{List: p.List()}, err
}

func (s BwInfo) HasBwClusters() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s BwInfo) SetBwClusters(v BwCluster_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewBwClusters sets the bwClusters field to a newly
// allocated BwCluster_List, preferring placement in s's segment.
func (s BwInfo) NewBwClusters(n int32) (BwCluster_List, error) {
	l, err := NewBwCluster_List(s.Struct.Segment(), n)
	if err != nil {
		return BwCluster_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s BwInfo) EgressBW() uint32 {
	return s.Struct.Uint32(0)
}

func (s BwInfo) SetEgressBW(v uint32) {
	s.Struct.SetUint32(0, v)
}

func (s BwInfo) InToOutBW() uint32 {
	return s.Struct.Uint32(4)
}

func (s BwInfo) SetInToOutBW(v uint32) {
	s.Struct.SetUint32(4, v)
}

// BwInfo_List is a list of BwInfo.
type BwInfo_List struct{ capnp.List }

// NewBwInfo creates a new list of BwInfo.
func NewBwInfo_List(s *capnp.Segment, sz int32) (BwInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return BwInfo_List{l}, err
}

func (s BwInfo_List) At(i int) BwInfo { return BwInfo{s.List.Struct(i)} }

func (s BwInfo_List) Set(i int, v BwInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s BwInfo_List) String() string {
	str, _ := text.MarshalList(0xe8339f855b7b98a8, s.List)
	return str
}

// BwInfo_Promise is a wrapper for a BwInfo promised by a client call.
type BwInfo_Promise struct{ *capnp.Pipeline }

func (p BwInfo_Promise) Struct() (BwInfo, error) {
	s, err := p.Pipeline.Struct()
	return BwInfo{s}, err
}

type GeoInfo struct{ capnp.Struct }

// GeoInfo_TypeID is the unique identifier for the type GeoInfo.
const GeoInfo_TypeID = 0xa7ddfd22d6604c1a

func NewGeoInfo(s *capnp.Segment) (GeoInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return GeoInfo{st}, err
}

func NewRootGeoInfo(s *capnp.Segment) (GeoInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return GeoInfo{st}, err
}

func ReadRootGeoInfo(msg *capnp.Message) (GeoInfo, error) {
	root, err := msg.RootPtr()
	return GeoInfo{root.Struct()}, err
}

func (s GeoInfo) String() string {
	str, _ := text.Marshal(0xa7ddfd22d6604c1a, s.Struct)
	return str
}

func (s GeoInfo) Latitude() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s GeoInfo) SetLatitude(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s GeoInfo) Longitude() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s GeoInfo) SetLongitude(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

// GeoInfo_List is a list of GeoInfo.
type GeoInfo_List struct{ capnp.List }

// NewGeoInfo creates a new list of GeoInfo.
func NewGeoInfo_List(s *capnp.Segment, sz int32) (GeoInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return GeoInfo_List{l}, err
}

func (s GeoInfo_List) At(i int) GeoInfo { return GeoInfo{s.List.Struct(i)} }

func (s GeoInfo_List) Set(i int, v GeoInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s GeoInfo_List) String() string {
	str, _ := text.MarshalList(0xa7ddfd22d6604c1a, s.List)
	return str
}

// GeoInfo_Promise is a wrapper for a GeoInfo promised by a client call.
type GeoInfo_Promise struct{ *capnp.Pipeline }

func (p GeoInfo_Promise) Struct() (GeoInfo, error) {
	s, err := p.Pipeline.Struct()
	return GeoInfo{s}, err
}

type WatchDogMetricExt struct{ capnp.Struct }

// WatchDogMetricExt_TypeID is the unique identifier for the type WatchDogMetricExt.
const WatchDogMetricExt_TypeID = 0xec40e340d3b20459

func NewWatchDogMetricExt(s *capnp.Segment) (WatchDogMetricExt, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return WatchDogMetricExt{st}, err
}

func NewRootWatchDogMetricExt(s *capnp.Segment) (WatchDogMetricExt, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return WatchDogMetricExt{st}, err
}

func ReadRootWatchDogMetricExt(msg *capnp.Message) (WatchDogMetricExt, error) {
	root, err := msg.RootPtr()
	return WatchDogMetricExt{root.Struct()}, err
}

func (s WatchDogMetricExt) String() string {
	str, _ := text.Marshal(0xec40e340d3b20459, s.Struct)
	return str
}

func (s WatchDogMetricExt) Set() bool {
	return s.Struct.Bit(0)
}

func (s WatchDogMetricExt) SetSet(v bool) {
	s.Struct.SetBit(0, v)
}

func (s WatchDogMetricExt) BwInfo() (BwInfo, error) {
	p, err := s.Struct.Ptr(0)
	return BwInfo{Struct: p.Struct()}, err
}

func (s WatchDogMetricExt) HasBwInfo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s WatchDogMetricExt) SetBwInfo(v BwInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewBwInfo sets the bwInfo field to a newly
// allocated BwInfo struct, preferring placement in s's segment.
func (s WatchDogMetricExt) NewBwInfo() (BwInfo, error) {
	ss, err := NewBwInfo(s.Struct.Segment())
	if err != nil {
		return BwInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s WatchDogMetricExt) GeoInfo() (GeoInfo, error) {
	p, err := s.Struct.Ptr(1)
	return GeoInfo{Struct: p.Struct()}, err
}

func (s WatchDogMetricExt) HasGeoInfo() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s WatchDogMetricExt) SetGeoInfo(v GeoInfo) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewGeoInfo sets the geoInfo field to a newly
// allocated GeoInfo struct, preferring placement in s's segment.
func (s WatchDogMetricExt) NewGeoInfo() (GeoInfo, error) {
	ss, err := NewGeoInfo(s.Struct.Segment())
	if err != nil {
		return GeoInfo{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// WatchDogMetricExt_List is a list of WatchDogMetricExt.
type WatchDogMetricExt_List struct{ capnp.List }

// NewWatchDogMetricExt creates a new list of WatchDogMetricExt.
func NewWatchDogMetricExt_List(s *capnp.Segment, sz int32) (WatchDogMetricExt_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return WatchDogMetricExt_List{l}, err
}

func (s WatchDogMetricExt_List) At(i int) WatchDogMetricExt {
	return WatchDogMetricExt{s.List.Struct(i)}
}

func (s WatchDogMetricExt_List) Set(i int, v WatchDogMetricExt) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s WatchDogMetricExt_List) String() string {
	str, _ := text.MarshalList(0xec40e340d3b20459, s.List)
	return str
}

// WatchDogMetricExt_Promise is a wrapper for a WatchDogMetricExt promised by a client call.
type WatchDogMetricExt_Promise struct{ *capnp.Pipeline }

func (p WatchDogMetricExt_Promise) Struct() (WatchDogMetricExt, error) {
	s, err := p.Pipeline.Struct()
	return WatchDogMetricExt{s}, err
}

func (p WatchDogMetricExt_Promise) BwInfo() BwInfo_Promise {
	return BwInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p WatchDogMetricExt_Promise) GeoInfo() GeoInfo_Promise {
	return GeoInfo_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

const schema_e6c88f91b6a1209e = "x\xdal\x93Oh\x13K\x1c\xc7\x7f\xdf\x99\xb4M_" +
	"\xdfk\xb3o\x03\xef\xe1E\xa9\x17\x15\x91\x96(H\x11" +
	"\x12cJMi1\x13\x0b\xa5j\xb5\xdb\xed4]H" +
	"vCvC[<\x14A\x05O\xe2E<)=\x88" +
	"\x8a\x07\xb1\xa0\x88\xb7\x1e\x14\x11<\x88\xe0A\xf0\xa4\xa8" +
	"\x07=\xf4\xe0\xa1\x87\xb22\xf9\xb3\xdb\xae\x9e2L\xbe" +
	"\xb3\xbf\xcf\xef3\xbf\x198\x8f\x0c\x1b\xec\xf8\x8f\x11\x89" +
	"\xff;:\xfd\xc2\xc3\x07{\xd3\xda\xc85\x12}\x80\x7f" +
	"{\xcf\xea\xd3\x1b\xd7_}\xa1\x0et\x11i\x1b\xaf\xb5" +
	"-\xf5\xbb\xb9H\xf07?\x1f9\xfa\xec\xc3\xfaM\x95" +
	"d\x91d\xaa\x02\x06}Y-\xf5:\xbe\x12\xfc]c" +
	"3\xef\xfb\xb7>\xde\x8b\xa4c*1\xc5\x9e\xeb\x06S" +
	"\xabi\xa6\xbe\xbc\xfa\xf2\xe0\xa5^y\xf5E\x84Ae" +
	"S\xeb\xec_\xe8o\x1b\xe17,M\xf0\xef\xdf\xbax" +
	"\xf6\xca\x9d\xd4\xb7?\x01\xeb?\xd8\x9a\xfe\xb3\x11\xde`" +
	"\x8f\x08\xfeTl\xed]\xe6S\xe6{4\xac\"\xa9\xbb" +
	"\xfc/\xe8O\xb8J?\xe6*m\xb8\x95\x0br\xc9s" +
	"\xd9!\xd3\xa8\xda\xd5\xa1\xec\xe2\x89r\xdd\xf5d\x8d\xa8" +
	"\x00\x888\x8f\x11\xc5@\xa4\xed/\x12\x89}\x1c\xe20" +
	"\x03\x90\x84\xda\x1b<C$\x068\xc4\x18\x83o6\xcf" +
	"e\x09\x93\x88\x13C\x9c\xe0[\xb6'k\xf3\x86I\\" +
	"\xba\xe8%\x148\xd0EL-\x83\xca\xbcU\xb9\xe8\xd4" +
	"=\xcb.\x15\x9c\xb2e.\x0f/y\x8d\xfa\x89\xa0\xbe" +
	"\xd1O$\xceq\x88\x05\x06\xad\x0d \xb3Db\x86C" +
	"\x94\x194\x86$\x18\x91f\x1d \x12s\x1c\xa2\xca\x00" +
	"\x9e\x04'\xd2**\xb8\xc0!.3t\xb9\xd2\x03\x88" +
	"\x01\x84\x95\xaaS\x9eX\xaeJt\x12C'\xa1\xcf\x9a" +
	"\xcf\xe7\xd0M\x0c\xdd\x84\x15\xcb\x9d3\xdc\x90\xbc;B" +
	"\x8e\x16\xf9HZ:y{\xde\x89\x08\x1b\x0d\x85\x05\xc0" +
	"\x83\xc5\x96\xb1c\x0c~\xd9\xf0,\xaf>'\x89\x08=" +
	"\xc4\xd0C\xf0\xcb\x8e]R\x9b\x04\x19\xecEM\xe5O" +
	"\xe7\x8e\xdb\xb6S\xb7MY\x91\xb67\xbc\x04O\x95\x8e" +
	"\x05\xa5\xffQ\xae\xe2\x1c\"\xb9\xb3\xdb\xdf\xc8\xb3\xbb\x17" +
	"\xdb\xe0\x7f\x07\xa7\x87\xd5\xad\xe68\xc4Lx\xd3\xd3\xa3" +
	"\xdb\xec\xb7E\xcbb(\xda\x9fm\x0d\x0e\xf1Z ," +
	"\x11>5BC\x9d,\xd5\xa4\xebf'U\xcb\xe1\x90" +
	"L8\xa7\xea\xde\x8e\xc1\x89\xb6<ix\xe6B\xce)" +
	"\x8dK\xaff\x99j:(\x02\xadZ\xce4G\xb1\x0d" +
	"\x9d\x1fj5R\xd8\x06=\xae&\xe1$\x87\x98\xd8\xe9" +
	"&=\xdbP\x81D\xf8\xda\x08H\x10VJ\xcd\xdbE" +
	"\"|\xe0\xcd\x7f~\x05\x00\x00\xff\xff\x96\xbd\x06\x1f"

func init() {
	schemas.Register(schema_e6c88f91b6a1209e,
		0x8947113f23a9ab50,
		0x96c1dab83835e4f9,
		0xa7ddfd22d6604c1a,
		0xc586650e812cc6a1,
		0xe8339f855b7b98a8,
		0xec40e340d3b20459)
}
